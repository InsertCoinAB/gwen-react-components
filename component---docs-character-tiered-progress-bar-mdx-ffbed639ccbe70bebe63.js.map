{"version":3,"sources":["webpack:///../docs/character/tiered-progress-bar.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","TieredProgressBarComponent","Tiers1","Tiers2","style","display","flexDirection","height","width","justifyContent","stepNumber","tiers","icon","color","background","React","useState","step","theme","primary","state","setState","themes","Fragment","onClick","s","p","Math","random","floor","of","isMDXComponent"],"mappings":"iiBASO,IAAMA,EAAe,Q,wNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iCADR,iCAGA,qFACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gdAA6dC,SAAO,GACrgBJ,QACAH,kBACAQ,eACAC,UACAC,wDACAC,WACAC,YAPqgB,gBAQrgBZ,IARqgB,EASrgBH,eATqgB,GAUpgBO,QAAQ,cACd,mBAAKS,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQ,QACRC,MAAO,QACPC,eAAgB,iBAEtB,YAAC,6BAAD,CAA4BC,WAAY,GAAIC,MAAOT,IAAQU,KAAK,SAASC,MAAM,UAAUC,WAAW,UAAUnB,QAAQ,+BACtH,YAAC,6BAAD,CAA4Be,WAAY,GAAIC,MAAOR,IAAQS,KAAK,OAAOC,MAAM,UAAUC,WAAW,UAAUnB,QAAQ,iCAGlH,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,ohCAAmjCC,SAAO,GAC3lCJ,QACAH,kBACAQ,eACAC,UACAC,wDACAC,WACAC,YAP2lC,gBAQ3lCZ,IAR2lC,EAS3lCH,eAT2lC,GAU1lCO,QAAQ,eACb,WAAM,MAC0BoB,IAAMC,SAAS,CACvCC,KAAM,EACNC,MAAO,CACLN,KAAM,SACNO,QAAS,UACTL,WAAY,aALTM,EADP,KACcC,EADd,KASMC,EAAS,CAAC,CACdV,KAAM,SACNO,QAAS,UACTL,WAAY,WACX,CACDF,KAAM,WACNO,QAAS,UACTL,WAAY,WACX,CACDF,KAAM,SACNO,QAAS,UACTL,WAAY,WACX,CACDF,KAAM,OACNO,QAAS,UACTL,WAAY,YAEd,OAAO,YAAC,IAAMS,SAAP,KACX,sBAAQC,QAAS,kBAAMH,GAAS,SAAAI,GACxB,IAAMC,EAAIC,KAAKC,SACf,MAAO,CACLX,KAAMQ,EAAER,KAAOU,KAAKE,MAAU,EAAJH,GAC1BR,MAAOI,EAAOK,KAAKE,MAAU,EAAJH,UAJnC,mBASA,YAAC,6BAAD,CAA4BhB,WAAYU,EAAMH,KAAMN,MAAOT,IAAQU,KAAMQ,EAAMF,MAAMN,KAAMC,MAAOO,EAAMF,MAAMC,QAASL,WAAYM,EAAMF,MAAMJ,WAAYnB,QAAQ,mCAInK,uBACA,YAAC,IAAD,CAAOmC,GAAI7B,6BAA4BN,QAAQ,gB,sNAKnDH,EAAWuC,gBAAiB","file":"component---docs-character-tiered-progress-bar-mdx-ffbed639ccbe70bebe63.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/gwen-react-components/gwen-react-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport { TieredProgressBarComponent } from \"../../src\";\nimport { Tiers1, Tiers2 } from \"./data\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tiered-progress-bar-component\"\n    }}>{`Tiered Progress Bar Component`}</h1>\n    <p>{`Use this component to display detailed character progression`}</p>\n    <Playground __position={0} __code={'<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    height: \\'200px\\',\\n    width: \\'400px\\',\\n    justifyContent: \\'space-around\\',\\n  }}\\n>\\n  <TieredProgressBarComponent\\n    stepNumber={35}\\n    tiers={Tiers1}\\n    icon=\\\"circle\\\"\\n    color=\\\"#13b06d\\\"\\n    background=\\\"#87c5aa\\\"\\n  />\\n  <TieredProgressBarComponent\\n    stepNumber={45}\\n    tiers={Tiers2}\\n    icon=\\\"star\\\"\\n    color=\\\"#a57af7\\\"\\n    background=\\\"#bbabd8\\\"\\n  />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TieredProgressBarComponent,\n      Tiers1,\n      Tiers2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<div style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"200px\",\n        width: \"400px\",\n        justifyContent: \"space-around\"\n      }}>\n\t\t<TieredProgressBarComponent stepNumber={35} tiers={Tiers1} icon=\"circle\" color=\"#13b06d\" background=\"#87c5aa\" mdxType=\"TieredProgressBarComponent\" />\n\t\t<TieredProgressBarComponent stepNumber={45} tiers={Tiers2} icon=\"star\" color=\"#a57af7\" background=\"#bbabd8\" mdxType=\"TieredProgressBarComponent\" />\n\t</div>\n    </Playground>\n    <Playground __position={1} __code={'() => {\\n  const [state, setState] = React.useState({\\n    step: 1,\\n    theme: { icon: \\'circle\\', primary: \\'#5dca7a\\', background: \\'#d5faee\\' },\\n  })\\n  const themes = [\\n    { icon: \\'circle\\', primary: \\'#5dca7a\\', background: \\'#d5faee\\' },\\n    { icon: \\'triangle\\', primary: \\'#2583bc\\', background: \\'#d6effe\\' },\\n    { icon: \\'square\\', primary: \\'#ebd10a\\', background: \\'#fffad9\\' },\\n    { icon: \\'star\\', primary: \\'#ae72fb\\', background: \\'#f4edfe\\' },\\n  ]\\n  return (\\n    <React.Fragment>\\n      <button\\n        onClick={() =>\\n          setState(s => {\\n            const p = Math.random()\\n            return {\\n              step: s.step + Math.floor(p * 5),\\n              theme: themes[Math.floor(p * 4)],\\n            }\\n          })\\n        }\\n      >\\n        Gain Experience\\n      </button>\\n      <TieredProgressBarComponent\\n        stepNumber={state.step}\\n        tiers={Tiers1}\\n        icon={state.theme.icon}\\n        color={state.theme.primary}\\n        background={state.theme.background}\\n      />\\n    </React.Fragment>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TieredProgressBarComponent,\n      Tiers1,\n      Tiers2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t{() => {\n        const [state, setState] = React.useState({\n          step: 1,\n          theme: {\n            icon: \"circle\",\n            primary: \"#5dca7a\",\n            background: \"#d5faee\"\n          }\n        });\n        const themes = [{\n          icon: \"circle\",\n          primary: \"#5dca7a\",\n          background: \"#d5faee\"\n        }, {\n          icon: \"triangle\",\n          primary: \"#2583bc\",\n          background: \"#d6effe\"\n        }, {\n          icon: \"square\",\n          primary: \"#ebd10a\",\n          background: \"#fffad9\"\n        }, {\n          icon: \"star\",\n          primary: \"#ae72fb\",\n          background: \"#f4edfe\"\n        }];\n        return <React.Fragment>\n\t\t\t\t<button onClick={() => setState(s => {\n            const p = Math.random();\n            return {\n              step: s.step + Math.floor(p * 5),\n              theme: themes[Math.floor(p * 4)]\n            };\n          })}>\n\t\t\t\t\tGain Experience\n\t\t\t\t</button>\n\t\t\t\t<TieredProgressBarComponent stepNumber={state.step} tiers={Tiers1} icon={state.theme.icon} color={state.theme.primary} background={state.theme.background} mdxType=\"TieredProgressBarComponent\" />\n\t\t\t</React.Fragment>;\n      }}\n    </Playground>\n    <br></br>\n    <Props of={TieredProgressBarComponent} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}