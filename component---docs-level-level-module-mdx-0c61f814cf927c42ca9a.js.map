{"version":3,"sources":["webpack:///../docs/level/level-module.mdx","webpack:///../docs/level/data.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","LevelModuleComponent","LogData","RewardData","style","width","height","overflow","data","level","currentXp","totalXp","levelXp","levelUp","log","rewards","avatar","url","colors","background","shirt","cooldowns","behaviorName","cooldownInMS","lastReportedAt","Date","of","isMDXComponent","type","xp","date","text","currency","amount"],"mappings":"8dASO,IAAMA,EAAe,Q,4KAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,6DACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,k3BAAq4BC,QAAS,CAC/6BJ,QACAH,kBACAQ,eACAC,UACAC,yBACAC,YACAC,gBACCR,QAAQ,cACd,mBAAKS,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,SAAU,WAEhB,YAAC,IAAD,CAAsBC,KAAM,CACpBC,MAAO,EACPC,UAAW,IACXC,QAAS,MACTC,QAAS,KACTC,SAAS,EACTC,IAAKZ,IACLa,QAASZ,KACRa,OAAQ,CACTC,IAAK,kFACLC,OAAQ,CACNC,WAAY,UACZC,MAAO,YAERC,UAAW,CAAC,CACbC,aAAc,iBACdC,aAAc,IACdC,eAAgB,IAAIC,MACnB,CACDH,aAAc,iBACdC,aAAc,KACdC,eAAgB,IAAIC,MACnB,CACDH,aAAc,gBACdC,aAAc,KACdC,eAAgB,IAAIC,OAClB9B,QAAQ,2BAGhB,YAAC,IAAD,CAAO+B,GAAIzB,IAAsBN,QAAQ,W,mKAK7CH,EAAWmC,gBAAiB,G,+GChFfzB,EAAU,CACtB,CAAE0B,KAAF,SAAkBC,GAAlB,GAA0BC,KAAM,IAAhC,KAA4CC,KAAM,oBAClD,CAAEH,KAAF,OAAgBC,GAAhB,GAAwBC,KAAM,IAA9B,KAA0CC,KAAM,eAChD,CAAEH,KAAF,OAAgBC,GAAhB,GAAwBC,KAAM,IAA9B,KAA0CC,KAAM,kBAChD,CAAEH,KAAF,QAAiBC,GAAjB,GAAyBC,KAAM,IAA/B,KAA2CC,KAAM,iBACjD,CAAEH,KAAF,YAAqBC,GAArB,GAA6BC,KAAM,IAAnC,KAA+CC,KAAM,aACrD,CAAEH,KAAF,UAAmBC,GAAnB,GAA2BC,KAAM,IAAjC,KAA6CC,KAAM,kBACnD,CAAEH,KAAF,MAAeC,GAAf,GAAuBC,KAAM,IAA7B,KAAyCC,KAAM,eAC/C,CAAEH,KAAF,OAAgBC,GAAhB,GAAwBC,KAAM,IAA9B,KAA0CC,KAAM,qBAChD,CAAEH,KAAF,MAAeC,GAAf,GAAuBC,KAAM,IAA7B,KAAyCC,KAAM,aAC/C,CAAEH,KAAF,MAAeC,GAAf,GAAuBC,KAAM,IAA7B,KAAyCC,KAAM,sB,iUAGzC,IAAM5B,EAAa,CAAC,CAAE6B,SAAF,OAAoBC,OAAQ,U","file":"component---docs-level-level-module-mdx-0c61f814cf927c42ca9a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/gwen-react-components/gwen-react-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport { LevelModuleComponent } from \"../../src\";\nimport { LogData, RewardData } from \"./data\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"module-component\"\n    }}>{`Module Component`}</h1>\n    <p>{`Use this component in Embedded views`}</p>\n    <Playground __position={0} __code={'<div style={{ width: \\'100%\\', height: \\'650px\\', overflow: \\'hidden\\' }}>\\n  <LevelModuleComponent\\n    data={{\\n      level: 5,\\n      currentXp: 512,\\n      totalXp: 10231,\\n      levelXp: 1100,\\n      levelUp: false,\\n      log: LogData,\\n      rewards: RewardData,\\n    }}\\n    avatar={{\\n      url:\\n        \\'https://storage.googleapis.com/gwen-prod-storage/avatar-packages/default/01.svg\\',\\n      colors: { background: \\'#98ca9d\\', shirt: \\'#55ab59\\' },\\n    }}\\n    cooldowns={[\\n      {\\n        behaviorName: \\'Paint a Donkey\\',\\n        cooldownInMS: 10000,\\n        lastReportedAt: new Date(),\\n      },\\n      {\\n        behaviorName: \\'Trick a Monkey\\',\\n        cooldownInMS: 95000,\\n        lastReportedAt: new Date(),\\n      },\\n      {\\n        behaviorName: \\'Eat a Bananna\\',\\n        cooldownInMS: 720000,\\n        lastReportedAt: new Date(),\\n      },\\n    ]}\\n  />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LevelModuleComponent,\n      LogData,\n      RewardData\n    }} mdxType=\"Playground\">\n\t<div style={{\n        width: \"100%\",\n        height: \"650px\",\n        overflow: \"hidden\"\n      }}>\n\t\t<LevelModuleComponent data={{\n          level: 5,\n          currentXp: 512,\n          totalXp: 10231,\n          levelXp: 1100,\n          levelUp: false,\n          log: LogData,\n          rewards: RewardData\n        }} avatar={{\n          url: \"https://storage.googleapis.com/gwen-prod-storage/avatar-packages/default/01.svg\",\n          colors: {\n            background: \"#98ca9d\",\n            shirt: \"#55ab59\"\n          }\n        }} cooldowns={[{\n          behaviorName: \"Paint a Donkey\",\n          cooldownInMS: 10000,\n          lastReportedAt: new Date()\n        }, {\n          behaviorName: \"Trick a Monkey\",\n          cooldownInMS: 95000,\n          lastReportedAt: new Date()\n        }, {\n          behaviorName: \"Eat a Bananna\",\n          cooldownInMS: 720000,\n          lastReportedAt: new Date()\n        }]} mdxType=\"LevelModuleComponent\" />\n\t</div>\n    </Playground>\n    <Props of={LevelModuleComponent} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export const LogData = [\n\t{ type: \"Review\", xp: 10, date: new Date(), text: \"Review a Product\" },\n\t{ type: \"Play\", xp: 10, date: new Date(), text: \"Play a Game\" },\n\t{ type: \"Like\", xp: 10, date: new Date(), text: \"Like a Picture\" },\n\t{ type: \"Share\", xp: 10, date: new Date(), text: \"Share a Story\" },\n\t{ type: \"Subscribe\", xp: 10, date: new Date(), text: \"Subscribe\" },\n\t{ type: \"Comment\", xp: 10, date: new Date(), text: \"Comment a Post\" },\n\t{ type: \"Pat\", xp: 10, date: new Date(), text: \"Pat a Tiger\" },\n\t{ type: \"Love\", xp: 10, date: new Date(), text: \"Sharing Is Caring\" },\n\t{ type: \"Pat\", xp: 10, date: new Date(), text: \"Pat a Cat\" },\n\t{ type: \"Hug\", xp: 10, date: new Date(), text: \"Hug a Friend\" },\n]\n\nexport const RewardData = [{ currency: \"coin\", amount: 50 }]\n"],"sourceRoot":""}